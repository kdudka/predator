#!/bin/bash
export SELF="$0"

if test -z "$1" || test ! -e "$1"; then
    echo Usage: $0 foo.c
    exit 1
fi

# include common code base
topdir="`dirname "$(readlink -f "$SELF")"`/../.."
source "$topdir/build-aux/cclib.sh"

# basic setup
CL_DIR="$topdir/cl"
GCC_PLUG='@PT_PLUG@'
GCC_HOST='@GCC_HOST@'

# attempt to make
make -C "$CL_DIR" -s -j5 'CMAKE=cmake -D CL_DEBUG=ON' || exit $?

# initial checks
find_gcc_host
find_cc1_host
find_gcc_plug chk_pt

export S='\o033[1;30m'
export R='\o033[1;31m'
export G='\o033[1;32m'
export Y='\o033[1;33m'
export B='\o033[1;34m'
export W='\o033[1;37m'
export N='\o033[0m'

function run_gcc() {
    OPTS="$1 \
        -I$topdir/include/predator-builtins                                    \
        -I$topdir/cl                                                           \
        -S -m32 -O0 -Wall -Wextra                                              \
        -o /dev/null                                                           \
        -fplugin=$GCC_PLUG                                                     \
        -fplugin-arg-libchk_pt-dump-pp                                         \
        -fplugin-arg-libchk_pt-args=$ARGS                                      \
        -fplugin-arg-libchk_pt-verbose=1"

    OPTS="`printf "%s\n" "$OPTS" | tr --squeeze-repeats ' '`"
    printf "\033[1;31m""COMMAND: \033[0m$GCC_HOST $OPTS\n" >&2
    "$GCC_HOST" $OPTS 3>&1 1>&2 2>&3
}

run_gcc "$@" | stdbuf --output=L sed                                           \
        -re 's|\[internal location\] \[-fplugin=libchk_pt\.so\]$||'            \
        -e "s/(> phase [0-9] <)/$G\1$N/"                                       \
        -e "s/(PT: )(ERROR:)/\1$R\2$S/"                                        \
        -e "s/(error:)/$R\1$S/"                                                \
        -e "s/(PT:)/$W\1$N/"                                                   \
        -e "s/('[^']+\.dot')/$B\1$S/"                                          \
        -e "s/(fixpoint)([^0-9]*)([0-9]+)(.*)/$R\1$W\2$R\3$W\4/"               \
        -e "s/(Request .*\.)/$Y\1$S/"                                          \
        -e "s/'([a-z_]+)'/$Y'\1'$W/"                                           \
        -e "s/(.*)/$S\1$N/"
